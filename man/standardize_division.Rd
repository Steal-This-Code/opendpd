% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_data.R
\name{standardize_division}
\alias{standardize_division}
\title{Standardize Police Division Names}
\usage{
standardize_division(data, division_col = division)
}
\arguments{
\item{data}{A data frame or tibble containing a column named `division`,
preferably already cleaned to lowercase and with squished whitespace.}

\item{division_col}{The name of the division column (unquoted or as string).
Defaults to `division`.}
}
\value{
A tibble with the specified division column standardized and converted
  to a factor with defined levels: "central", "northeast", "northwest",
  "southcentral", "southeast", "southwest", "northcentral". Values not matching
  known variations or standard names will become `NA`.
}
\description{
Maps known variations of Dallas Police division names to a standard set and
converts the column to a factor. Designed to be used after basic text cleaning
(e.g., via `clean_incidents_data`).
}
\examples{
\dontrun{
  # Assume raw_incidents is output from get_incidents()
  # Basic cleaning first
  cleaned_incidents <- clean_incidents_data(raw_incidents)

  # Standardize the 'division' column
  standardized_incidents <- standardize_division(cleaned_incidents)

  # Check the levels and values
  print(levels(standardized_incidents$division))
  print(table(standardized_incidents$division, useNA = "ifany"))

  # Example with a non-standard column name
  # df <- tibble::tibble(dpd_division = c("central", " South West ", "NORTHEAST"))
  # standardized_df <- standardize_division(df, division_col = dpd_division)
  # print(standardized_df)
}
}
