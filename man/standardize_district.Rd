% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_data.R
\name{standardize_district}
\alias{standardize_district}
\title{Standardize Dallas Council District Names}
\usage{
standardize_district(data, district_col = district)
}
\arguments{
\item{data}{A data frame or tibble containing a council district column,
typically named `district`.}

\item{district_col}{The name of the district column (unquoted or as string).
Defaults to `district`.}
}
\value{
A tibble with the specified district column standardized to character
  values "1" through "14" and converted to a factor. Values that cannot be
  confidently mapped to 1-14 will become `NA`.
}
\description{
Attempts to map variations of Dallas City Council District names/numbers
to a standard format ("1" through "14") and converts the column to a factor.
Assumes input column has already had basic text cleaning (lowercase, spacing).
}
\examples{
\dontrun{
  # Assume raw_incidents is output from get_incidents()
  cleaned_incidents <- clean_incidents_data(raw_incidents) # Basic cleaning first
  standardized_incidents <- standardize_district(cleaned_incidents)

  # Check the levels and values
  print(levels(standardized_incidents$district))
  print(table(standardized_incidents$district, useNA = "ifany"))

  # Example with different inputs
  # df <- tibble::tibble(council_dist = c("1", "District 2", "DISTRICT_03", "UNKNOWN"))
  # standardized_df <- standardize_district(df, district_col = council_dist)
  # print(standardized_df) # Expect "1", "2", "3", NA
}
}
