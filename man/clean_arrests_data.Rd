% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_data.R
\name{clean_arrests_data}
\alias{clean_arrests_data}
\title{Clean Dallas Police Arrests Data}
\usage{
clean_arrests_data(
  data,
  text_fields = c("arlzip", "arlcity", "arstate", "arldistrict", "aradow", "arpremises",
    "arweapon", "arcond", "race", "ethnic", "sex"),
  date_fields = c("ararrestdate", "arbkdate", "warrantissueddate", "changedate",
    "ofcr_rpt_written_by_date", "ofcr_approved_by_date", "ofcr_received_by_date",
    "apprehended_date", "final_disp_date", "upzdate"),
  tz = "America/Chicago"
)
}
\arguments{
\item{data}{A data frame or tibble, typically the output from `get_arrests()`.}

\item{text_fields}{A character vector specifying the names of text columns to clean.
Defaults to common categorical/text fields in the Arrests dataset.
Provide `NULL` to skip text cleaning.}

\item{date_fields}{A character vector specifying the names of date/time columns
to parse into POSIXct objects. Defaults to known date/time fields in the
Arrests dataset. Provide `NULL` to skip date parsing.}

\item{tz}{The timezone to assign during date/time parsing. Defaults to
`"America/Chicago"`. See `base::OlsonNames()` for other valid options.}
}
\value{
A tibble with the specified cleaning and parsing applied.
}
\description{
This function standardizes common text columns from the Arrests dataset by
converting them to lowercase, trimming leading/trailing whitespace, and
squishing internal whitespace. It also converts known date/time columns
(both text and timestamp types from the source) to POSIXct objects using `lubridate`.
}
\details{
Performs basic cleaning on text fields and converts date/time columns
for data retrieved using `get_arrests()`.
}
\examples{
\dontrun{
  # Fetch some raw arrest data
  raw_arrests <- get_arrests(limit = 100, start_date = "2024-03-01")

  # Apply default cleaning (common text fields + date fields)
  # Requires stringr & lubridate
  # install.packages(c("stringr", "lubridate"))
  cleaned_arrests <- clean_arrests_data(raw_arrests)

  # Check class of arrest date
  print(class(cleaned_arrests$ararrestdate))

  # Check distinct premises after cleaning
  print(unique(cleaned_arrests$arpremises))

  # Clean only date fields
  dates_only_cleaned <- clean_arrests_data(raw_arrests, text_fields = NULL)
  print(head(dates_only_cleaned))
}
}
